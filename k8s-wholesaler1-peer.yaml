# YAML for launching the orderer
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wholesaler1-peer
  labels:
    app: wholesaler1-peer
spec:
  serviceName: wholesaler1-peer
  replicas: 1
  selector:
    matchLabels:
      app: wholesaler1-peer
  template:
    metadata:
      labels:
        app: wholesaler1-peer
    spec:
      containers:
      - name: wholesaler1-peer
        # image used
        image: pesanhane/k8s-hlf-wholesaler1-peer:2.0
        # Uncomment the following during development/testing of the image
        # imagePullPolicy: Always
        env:
          - name: FABRIC_CFG_PATH
            value: /var/hyperledger/config
          - name: FABRIC_LOGGING_SPEC
            value: INFO
          - name: ORDERER_ADDRESS
            value: smallfarmer1-orderer-clusterip:30750
          - name: ORG_CONTEXT
            value: wholesaler1
          - name: CORE_PEER_ADDRESS
          # value: budget-peer-clusterip:30851
            value: localhost:30851
        volumeMounts:
        - name: wholesaler1-peer-ledger
          mountPath: /var/ledger
        - name: dockersock
          mountPath: /var/run/docker.sock
      volumes:
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
  volumeClaimTemplates:
  - metadata: 
      name: wholesaler1-peer-ledger
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: general
      resources:
        requests:
          storage: 1Gi



---
# Expose the port 30851 as ClusterIP
apiVersion: v1
kind: Service
metadata:
  name: wholesaler1-peer-clusterip

spec:
  # This defines which pods are going to be represented by this Service
  # The service becomes a network endpoint for either other services
  # or maybe external users to connect to (eg browser)
  selector:
    app: wholesaler1-peer

  ports:
    - name: wholesaler1-peer-clusterip
      port: 30851
    # - name: budget-peer-cc-clusterip
    #   port: 30852

  type: ClusterIP

---
# Expose the port 30851 as node port -  NEEDED if you
# are interested in connecting to the Pods from the Host
# machine - keep in mind you would need the IP for the node
# port service
apiVersion: v1
kind: Service
metadata:
  name: wholesaler1-peer-nodeport

spec:
  # This defines which pods are going to be represented by this Service
  # The service becomes a network endpoint for either other services
  # or maybe external users to connect to (eg browser)
  selector:
    app: wholesaler1-peer

  ports:
    - name: wholesaler1-peer-nodeport-851
      port: 30851
      nodePort: 30851
    - name: wholesaler1-peer-cc-nodeport-852
      port: 30852
      nodePort: 30852

  type: NodePort
